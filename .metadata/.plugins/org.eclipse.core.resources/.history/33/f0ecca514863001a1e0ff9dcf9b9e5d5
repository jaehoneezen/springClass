<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
		
	<bean id="greetingTarget" class="spring.aop.GreetingServiceImpl" p:greeting="hello"/>
	
	<!-- S:aspect(공통관심사항) 으로 사용 -->
	<bean id="logAspect" class="spring.aop.LogAspect" />
	<bean id="performanceAspect" class="spring.aop.PerformanceAspect" />
	<!-- E:aspect(공통관심사항) 으로 사용 -->
	
	<aop:config proxy-target-class="true">
		<!-- expression:aspectJ 표현식 요청한 method가 public method라면 -->
		<aop:pointcut id="publicMethod" expression="execution(public * *(..))" />
		<aop:aspect ref="logAspect">
			<aop:before method="beforeLogging" pointcut-ref="publicMethod"/>
			
			<!-- returning 값이랑 method에 사용된 매개변수명이랑 똑같아야한다 -->
			<aop:after-returning method=""/>
		</aop:aspect>
	</aop:config>


</beans>
